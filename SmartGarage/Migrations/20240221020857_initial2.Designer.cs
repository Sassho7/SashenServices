// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartGarage.Data;

#nullable disable

namespace SmartGarage.Migrations
{
    [DbContext(typeof(SGDbContext))]
    [Migration("20240221020857_initial2")]
    partial class initial2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SmartGarage.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("ServiceId");

                    b.HasIndex("UserId");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            ServiceId = 1,
                            Name = "Oil Change",
                            Price = 50.0,
                            UserId = 1,
                            isDeleted = false
                        },
                        new
                        {
                            ServiceId = 2,
                            Name = "Tire Rotation",
                            Price = 30.0,
                            UserId = 2,
                            isDeleted = false
                        });
                });

            modelBuilder.Entity("SmartGarage.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmployee")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "user1@example.com",
                            IsDeleted = false,
                            IsEmployee = false,
                            JoinDate = new DateTime(2024, 2, 21, 4, 8, 57, 718, DateTimeKind.Local).AddTicks(413),
                            PasswordHash = "Test123!",
                            PhoneNumber = "1234567890",
                            Username = "exampleuser1"
                        },
                        new
                        {
                            Id = 2,
                            Email = "user2@example.com",
                            IsDeleted = false,
                            IsEmployee = false,
                            JoinDate = new DateTime(2024, 2, 21, 4, 8, 57, 718, DateTimeKind.Local).AddTicks(447),
                            PasswordHash = "Test123!",
                            PhoneNumber = "9876543210",
                            Username = "exampleuser2"
                        });
                });

            modelBuilder.Entity("SmartGarage.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CarLicencePlate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasAnnotation("MinLength", 2);

                    b.Property<string>("CarMake")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CarModel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CarVin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasAnnotation("MinLength", 2);

                    b.Property<int>("CarYear")
                        .HasMaxLength(50)
                        .HasColumnType("int")
                        .HasAnnotation("MinLength", 2);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarLicencePlate = "ABC123",
                            CarMake = "Toyota",
                            CarModel = "Camry",
                            CarVin = "ABC123456DEF78901",
                            CarYear = 2018,
                            IsDeleted = false,
                            userId = 1
                        },
                        new
                        {
                            Id = 2,
                            CarLicencePlate = "XYZ789",
                            CarMake = "Honda",
                            CarModel = "Accord",
                            CarVin = "DEF987654ABC12345",
                            CarYear = 2019,
                            IsDeleted = false,
                            userId = 2
                        });
                });

            modelBuilder.Entity("SmartGarage.Models.Service", b =>
                {
                    b.HasOne("SmartGarage.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartGarage.Models.Vehicle", b =>
                {
                    b.HasOne("SmartGarage.Models.User", "User")
                        .WithMany("Vehicles")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartGarage.Models.User", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
